#pragma kernel AppendNode

#define NUM_THREAD_X 16

#include "GpuTrailVariablesCS.compute"

int _TotalInputIdx;
int _InputNum;

StructuredBuffer<Node> _InputBuffer;
RWStructuredBuffer<Node> _NodeBuffer;

////////////////////////////////////////////////////////////////////////////////
// AppendNode
////////////////////////////////////////////////////////////////////////////////

// idx must 0~_BufferSize-1
int GetInputBufIdx(int idx)
{
	//今回のInputに含まれるIdx
	int inputFirst = (_TotalInputIdx - _InputNum + 1) % _NodeNumPerTrail;
	int idxWithOffset = idx + ((idx < inputFirst) ? _NodeNumPerTrail : 0);

	return ((inputFirst <= idxWithOffset) && (idxWithOffset < (inputFirst + _InputNum)))
	? idxWithOffset - inputFirst
	: -1;
}

[numthreads(NUM_THREAD_X,1,1)]
void AppendNode (uint3 id : SV_DispatchThreadID)
{
	int idx = id.x;
	if ( idx < (int)_NodeNumPerTrail )
	{
		int inputIdxLast = _TotalInputIdx % _NodeNumPerTrail;
		int inputBufIdx = GetInputBufIdx(idx);
		if ( inputBufIdx >= 0 )
		{
			_NodeBuffer[idx] = _InputBuffer[inputBufIdx];
		}
	}
}
